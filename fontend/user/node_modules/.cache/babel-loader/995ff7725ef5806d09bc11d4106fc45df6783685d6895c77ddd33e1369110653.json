{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport useFetchData from '../useFetchData'; // Import default\n// API URL cho danh sách tỉnh/thành phố\nconst API_URL_PROVINCES = 'https://provinces.open-api.vn/api/';\n\n// Custom hook để quản lý dữ liệu tỉnh/thành phố, quận/huyện, phường/xã\nexport const useDiaChi = () => {\n  _s();\n  // State cho danh sách tỉnh/thành phố\n  const [provinceList, setProvinceList] = useState([]);\n  // State cho danh sách quận/huyện\n  const [districtList, setDistrictList] = useState([]);\n  // State cho danh sách phường/xã\n  const [wardList, setWardList] = useState([]);\n  // State cho tỉnh/thành phố đã chọn\n  const [selectedProvince, setSelectedProvince] = useState('');\n  // State cho quận/huyện đã chọn\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  // State cho phường/xã đã chọn\n  const [selectedWard, setSelectedWard] = useState('');\n\n  // Fetch dữ liệu tỉnh/thành phố sử dụng custom hook useFetchData\n  const {\n    data: provincesData,\n    loading: provincesLoading,\n    error: provincesError\n  } = useFetchData(API_URL_PROVINCES);\n\n  // Effect hook để cập nhật danh sách tỉnh/thành phố khi dữ liệu được fetch thành công\n  useEffect(() => {\n    if (provincesData) {\n      setProvinceList(provincesData);\n    }\n  }, [provincesData]);\n\n  // Effect hook để fetch danh sách quận/huyện khi tỉnh/thành phố được chọn\n  useEffect(() => {\n    if (selectedProvince) {\n      fetch(`https://provinces.open-api.vn/api/p/${selectedProvince}?depth=2`).then(response => response.json()).then(data => {\n        if (data !== null && data !== void 0 && data.districts) {\n          setDistrictList(Object.values(data.districts));\n          setWardList([]);\n          setSelectedDistrict('');\n          setSelectedWard('');\n        } else {\n          setDistrictList([]);\n          setWardList([]);\n          setSelectedDistrict('');\n          setSelectedWard('');\n        }\n      }).catch(error => console.error('Lỗi khi lấy dữ liệu quận/huyện:', error));\n    } else {\n      setDistrictList([]);\n      setWardList([]);\n      setSelectedDistrict('');\n      setSelectedWard('');\n    }\n  }, [selectedProvince]);\n\n  // Effect hook để fetch danh sách phường/xã khi quận/huyện được chọn\n  useEffect(() => {\n    if (selectedDistrict && selectedProvince) {\n      fetch(`https://provinces.open-api.vn/api/d/${selectedDistrict}?depth=2`).then(response => response.json()).then(data => {\n        if (data !== null && data !== void 0 && data.wards) {\n          setWardList(Object.values(data.wards));\n          setSelectedWard('');\n        } else {\n          setWardList([]);\n          setSelectedWard('');\n        }\n      }).catch(error => console.error('Lỗi khi lấy dữ liệu phường/xã:', error));\n    } else {\n      setWardList([]);\n      setSelectedWard('');\n    }\n  }, [selectedDistrict, selectedProvince]);\n\n  // Hàm xử lý khi thay đổi tỉnh/thành phố\n  const handleProvinceChange = event => {\n    setSelectedProvince(event.target.value);\n  };\n\n  // Hàm xử lý khi thay đổi quận/huyện\n  const handleDistrictChange = event => {\n    setSelectedDistrict(event.target.value);\n  };\n\n  // Hàm xử lý khi thay đổi phường/xã\n  const handleWardChange = event => {\n    setSelectedWard(event.target.value);\n  };\n  return {\n    provinceList,\n    districtList,\n    wardList,\n    selectedProvince,\n    selectedDistrict,\n    selectedWard,\n    handleProvinceChange,\n    handleDistrictChange,\n    handleWardChange,\n    provincesLoading,\n    provincesError\n  };\n};\n_s(useDiaChi, \"VTY3rmVijj4sBjY5clbfnWLNr28=\", false, function () {\n  return [useFetchData];\n});","map":{"version":3,"names":["useState","useEffect","useFetchData","API_URL_PROVINCES","useDiaChi","_s","provinceList","setProvinceList","districtList","setDistrictList","wardList","setWardList","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedWard","setSelectedWard","data","provincesData","loading","provincesLoading","error","provincesError","fetch","then","response","json","districts","Object","values","catch","console","wards","handleProvinceChange","event","target","value","handleDistrictChange","handleWardChange"],"sources":["D:/nxb_KimDong/fontend/user/src/component/payment/useDiaChi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport useFetchData from '../useFetchData'; // Import default\r\n// API URL cho danh sách tỉnh/thành phố\r\nconst API_URL_PROVINCES = 'https://provinces.open-api.vn/api/';\r\n\r\n// Custom hook để quản lý dữ liệu tỉnh/thành phố, quận/huyện, phường/xã\r\nexport const useDiaChi = () => {\r\n    // State cho danh sách tỉnh/thành phố\r\n    const [provinceList, setProvinceList] = useState([]);\r\n    // State cho danh sách quận/huyện\r\n    const [districtList, setDistrictList] = useState([]);\r\n    // State cho danh sách phường/xã\r\n    const [wardList, setWardList] = useState([]);\r\n    // State cho tỉnh/thành phố đã chọn\r\n    const [selectedProvince, setSelectedProvince] = useState('');\r\n    // State cho quận/huyện đã chọn\r\n    const [selectedDistrict, setSelectedDistrict] = useState('');\r\n    // State cho phường/xã đã chọn\r\n    const [selectedWard, setSelectedWard] = useState('');\r\n\r\n    // Fetch dữ liệu tỉnh/thành phố sử dụng custom hook useFetchData\r\n    const { data: provincesData, loading: provincesLoading, error: provincesError } = useFetchData(API_URL_PROVINCES);\r\n\r\n    // Effect hook để cập nhật danh sách tỉnh/thành phố khi dữ liệu được fetch thành công\r\n    useEffect(() => {\r\n        if (provincesData) {\r\n            setProvinceList(provincesData);\r\n        }\r\n    }, [provincesData]);\r\n\r\n    // Effect hook để fetch danh sách quận/huyện khi tỉnh/thành phố được chọn\r\n    useEffect(() => {\r\n        if (selectedProvince) {\r\n            fetch(`https://provinces.open-api.vn/api/p/${selectedProvince}?depth=2`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data?.districts) {\r\n                        setDistrictList(Object.values(data.districts));\r\n                        setWardList([]);\r\n                        setSelectedDistrict('');\r\n                        setSelectedWard('');\r\n                    } else {\r\n                        setDistrictList([]);\r\n                        setWardList([]);\r\n                        setSelectedDistrict('');\r\n                        setSelectedWard('');\r\n                    }\r\n                })\r\n                .catch(error => console.error('Lỗi khi lấy dữ liệu quận/huyện:', error));\r\n        } else {\r\n            setDistrictList([]);\r\n            setWardList([]);\r\n            setSelectedDistrict('');\r\n            setSelectedWard('');\r\n        }\r\n    }, [selectedProvince]);\r\n\r\n    // Effect hook để fetch danh sách phường/xã khi quận/huyện được chọn\r\n    useEffect(() => {\r\n        if (selectedDistrict && selectedProvince) {\r\n            fetch(`https://provinces.open-api.vn/api/d/${selectedDistrict}?depth=2`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data?.wards) {\r\n                        setWardList(Object.values(data.wards));\r\n                        setSelectedWard('');\r\n                    } else {\r\n                        setWardList([]);\r\n                        setSelectedWard('');\r\n                    }\r\n                })\r\n                .catch(error => console.error('Lỗi khi lấy dữ liệu phường/xã:', error));\r\n        } else {\r\n            setWardList([]);\r\n            setSelectedWard('');\r\n        }\r\n    }, [selectedDistrict, selectedProvince]);\r\n\r\n    // Hàm xử lý khi thay đổi tỉnh/thành phố\r\n    const handleProvinceChange = (event) => {\r\n        setSelectedProvince(event.target.value);\r\n    };\r\n\r\n    // Hàm xử lý khi thay đổi quận/huyện\r\n    const handleDistrictChange = (event) => {\r\n        setSelectedDistrict(event.target.value);\r\n    };\r\n\r\n    // Hàm xử lý khi thay đổi phường/xã\r\n    const handleWardChange = (event) => {\r\n        setSelectedWard(event.target.value);\r\n    };\r\n\r\n    return {\r\n        provinceList,\r\n        districtList,\r\n        wardList,\r\n        selectedProvince,\r\n        selectedDistrict,\r\n        selectedWard,\r\n        handleProvinceChange,\r\n        handleDistrictChange,\r\n        handleWardChange,\r\n        provincesLoading,\r\n        provincesError,\r\n    };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,iBAAiB,CAAC,CAAC;AAC5C;AACA,MAAMC,iBAAiB,GAAG,oCAAoC;;AAE9D;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5D;EACA,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D;EACA,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM;IAAEkB,IAAI,EAAEC,aAAa;IAAEC,OAAO,EAAEC,gBAAgB;IAAEC,KAAK,EAAEC;EAAe,CAAC,GAAGrB,YAAY,CAACC,iBAAiB,CAAC;;EAEjH;EACAF,SAAS,CAAC,MAAM;IACZ,IAAIkB,aAAa,EAAE;MACfZ,eAAe,CAACY,aAAa,CAAC;IAClC;EACJ,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACAlB,SAAS,CAAC,MAAM;IACZ,IAAIW,gBAAgB,EAAE;MAClBY,KAAK,CAAC,uCAAuCZ,gBAAgB,UAAU,CAAC,CACnEa,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACP,IAAI,IAAI;QACV,IAAIA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEU,SAAS,EAAE;UACjBnB,eAAe,CAACoB,MAAM,CAACC,MAAM,CAACZ,IAAI,CAACU,SAAS,CAAC,CAAC;UAC9CjB,WAAW,CAAC,EAAE,CAAC;UACfI,mBAAmB,CAAC,EAAE,CAAC;UACvBE,eAAe,CAAC,EAAE,CAAC;QACvB,CAAC,MAAM;UACHR,eAAe,CAAC,EAAE,CAAC;UACnBE,WAAW,CAAC,EAAE,CAAC;UACfI,mBAAmB,CAAC,EAAE,CAAC;UACvBE,eAAe,CAAC,EAAE,CAAC;QACvB;MACJ,CAAC,CAAC,CACDc,KAAK,CAACT,KAAK,IAAIU,OAAO,CAACV,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;IAChF,CAAC,MAAM;MACHb,eAAe,CAAC,EAAE,CAAC;MACnBE,WAAW,CAAC,EAAE,CAAC;MACfI,mBAAmB,CAAC,EAAE,CAAC;MACvBE,eAAe,CAAC,EAAE,CAAC;IACvB;EACJ,CAAC,EAAE,CAACL,gBAAgB,CAAC,CAAC;;EAEtB;EACAX,SAAS,CAAC,MAAM;IACZ,IAAIa,gBAAgB,IAAIF,gBAAgB,EAAE;MACtCY,KAAK,CAAC,uCAAuCV,gBAAgB,UAAU,CAAC,CACnEW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACP,IAAI,IAAI;QACV,IAAIA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEe,KAAK,EAAE;UACbtB,WAAW,CAACkB,MAAM,CAACC,MAAM,CAACZ,IAAI,CAACe,KAAK,CAAC,CAAC;UACtChB,eAAe,CAAC,EAAE,CAAC;QACvB,CAAC,MAAM;UACHN,WAAW,CAAC,EAAE,CAAC;UACfM,eAAe,CAAC,EAAE,CAAC;QACvB;MACJ,CAAC,CAAC,CACDc,KAAK,CAACT,KAAK,IAAIU,OAAO,CAACV,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;IAC/E,CAAC,MAAM;MACHX,WAAW,CAAC,EAAE,CAAC;MACfM,eAAe,CAAC,EAAE,CAAC;IACvB;EACJ,CAAC,EAAE,CAACH,gBAAgB,EAAEF,gBAAgB,CAAC,CAAC;;EAExC;EACA,MAAMsB,oBAAoB,GAAIC,KAAK,IAAK;IACpCtB,mBAAmB,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACpCpB,mBAAmB,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3C,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAIJ,KAAK,IAAK;IAChClB,eAAe,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,OAAO;IACH/B,YAAY;IACZE,YAAY;IACZE,QAAQ;IACRE,gBAAgB;IAChBE,gBAAgB;IAChBE,YAAY;IACZkB,oBAAoB;IACpBI,oBAAoB;IACpBC,gBAAgB;IAChBlB,gBAAgB;IAChBE;EACJ,CAAC;AACL,CAAC;AAAClB,EAAA,CApGWD,SAAS;EAAA,QAegEF,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}