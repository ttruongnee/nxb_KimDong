{"ast":null,"code":"var _s = $RefreshSig$();\n// useGioHang.js\nimport { useState, useEffect } from 'react';\nexport const useGioHang = () => {\n  _s();\n  // State (biến lưu trữ trạng thái) cho giỏ hàng, dùng object để dễ tìm sản phẩm bằng ID\n  const [objGioHang, setObjGioHang] = useState({});\n  // State cho danh sách các sản phẩm trong giỏ hàng (dạng mảng để dễ hiển thị)\n  const [arrGioHang, setArrGioHang] = useState([]);\n\n  // Hàm useEffect chạy một lần sau khi component được tạo ra lần đầu tiên\n  useEffect(() => {\n    // Lấy dữ liệu giỏ hàng đã lưu từ bộ nhớ của trình duyệt\n    const gioHangDaLuu = localStorage.getItem('GioHang');\n\n    // Kiểm tra xem có dữ liệu giỏ hàng đã lưu hay không\n    if (gioHangDaLuu) {\n      try {\n        // Chuyển đổi chuỗi JSON đã lưu thành đối tượng JavaScript\n        const gioHangParsed = JSON.parse(gioHangDaLuu);\n        // Cập nhật state giỏ hàng (dạng object) với dữ liệu đã lấy\n        setObjGioHang(gioHangParsed);\n        // Chuyển đổi các giá trị (sản phẩm) từ object giỏ hàng thành một mảng\n        setArrGioHang(Object.values(gioHangParsed));\n      } catch (error) {\n        // Nếu có lỗi khi xử lý dữ liệu đã lưu, in ra lỗi và đặt giỏ hàng về trạng thái rỗng\n        console.error('Lỗi xử lý giỏ hàng đã lưu:', error);\n        setObjGioHang({});\n        setArrGioHang([]);\n      }\n    } else {\n      // Nếu không có dữ liệu giỏ hàng đã lưu, khởi tạo giỏ hàng là rỗng\n      setObjGioHang({});\n      setArrGioHang([]);\n    }\n  }, []);\n\n  // Trả về state giỏ hàng (dạng object và array) để component khác dùng\n  return {\n    objGioHang,\n    // Object chứa thông tin giỏ hàng (ID sản phẩm là key)\n    arrGioHang // Mảng chứa danh sách các sản phẩm trong giỏ hàng\n  };\n};\n_s(useGioHang, \"/NBK8xDsez2zWixcqKbPYVmGbOc=\");","map":{"version":3,"names":["useState","useEffect","useGioHang","_s","objGioHang","setObjGioHang","arrGioHang","setArrGioHang","gioHangDaLuu","localStorage","getItem","gioHangParsed","JSON","parse","Object","values","error","console"],"sources":["D:/nxb_KimDong/fontend/user/src/component/payment/useGioHang.js"],"sourcesContent":["// useGioHang.js\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useGioHang = () => {\r\n    // State (biến lưu trữ trạng thái) cho giỏ hàng, dùng object để dễ tìm sản phẩm bằng ID\r\n    const [objGioHang, setObjGioHang] = useState({});\r\n    // State cho danh sách các sản phẩm trong giỏ hàng (dạng mảng để dễ hiển thị)\r\n    const [arrGioHang, setArrGioHang] = useState([]);\r\n\r\n    // Hàm useEffect chạy một lần sau khi component được tạo ra lần đầu tiên\r\n    useEffect(() => {\r\n        // Lấy dữ liệu giỏ hàng đã lưu từ bộ nhớ của trình duyệt\r\n        const gioHangDaLuu = localStorage.getItem('GioHang');\r\n\r\n        // Kiểm tra xem có dữ liệu giỏ hàng đã lưu hay không\r\n        if (gioHangDaLuu) {\r\n            try {\r\n                // Chuyển đổi chuỗi JSON đã lưu thành đối tượng JavaScript\r\n                const gioHangParsed = JSON.parse(gioHangDaLuu);\r\n                // Cập nhật state giỏ hàng (dạng object) với dữ liệu đã lấy\r\n                setObjGioHang(gioHangParsed);\r\n                // Chuyển đổi các giá trị (sản phẩm) từ object giỏ hàng thành một mảng\r\n                setArrGioHang(Object.values(gioHangParsed));\r\n            } catch (error) {\r\n                // Nếu có lỗi khi xử lý dữ liệu đã lưu, in ra lỗi và đặt giỏ hàng về trạng thái rỗng\r\n                console.error('Lỗi xử lý giỏ hàng đã lưu:', error);\r\n                setObjGioHang({});\r\n                setArrGioHang([]);\r\n            }\r\n        } else {\r\n            // Nếu không có dữ liệu giỏ hàng đã lưu, khởi tạo giỏ hàng là rỗng\r\n            setObjGioHang({});\r\n            setArrGioHang([]);\r\n        }\r\n    }, []);\r\n\r\n    // Trả về state giỏ hàng (dạng object và array) để component khác dùng\r\n    return {\r\n        objGioHang, // Object chứa thông tin giỏ hàng (ID sản phẩm là key)\r\n        arrGioHang  // Mảng chứa danh sách các sản phẩm trong giỏ hàng\r\n    };\r\n};"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD;EACA,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;;IAEpD;IACA,IAAIF,YAAY,EAAE;MACd,IAAI;QACA;QACA,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;QAC9C;QACAH,aAAa,CAACM,aAAa,CAAC;QAC5B;QACAJ,aAAa,CAACO,MAAM,CAACC,MAAM,CAACJ,aAAa,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZ;QACAC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDX,aAAa,CAAC,CAAC,CAAC,CAAC;QACjBE,aAAa,CAAC,EAAE,CAAC;MACrB;IACJ,CAAC,MAAM;MACH;MACAF,aAAa,CAAC,CAAC,CAAC,CAAC;MACjBE,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,OAAO;IACHH,UAAU;IAAE;IACZE,UAAU,CAAE;EAChB,CAAC;AACL,CAAC;AAACH,EAAA,CAtCWD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}