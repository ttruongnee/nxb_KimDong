{"ast":null,"code":"// utils.js\n\n// Hàm tính tổng tiền tất cả sản phẩm trong giỏ hàng\nexport function funcGetTongTien(gioHang) {\n  // Lấy ra danh sách các sản phẩm trong giỏ hàng\n  var arrGioHang = Object.values(gioHang);\n  var tongtien = 0;\n  // Duyệt qua từng sản phẩm trong giỏ hàng\n  for (var i = 0; i < arrGioHang.length; i++) {\n    var sanPham = arrGioHang[i];\n    // Tính tiền của sản phẩm hiện tại (giá nhân số lượng) và cộng vào tổng tiền\n    tongtien = tongtien + sanPham.GiaBanTruyen * sanPham.SoLuongTruyen;\n  }\n  // Trả về tổng tiền\n  return tongtien;\n}\n\n// Hàm tính tổng tiền sau khi đã áp dụng giảm giá\nexport function funcTongTienSauGG(tongTien, phanTramGiam) {\n  // Tính số tiền được giảm\n  var tienGiam = tongTien * phanTramGiam / 100;\n  // Trả về tổng tiền sau khi đã trừ đi số tiền giảm\n  return tongTien - tienGiam;\n}\n\n// Hàm tạo một ID ngẫu nhiên\nexport function taoID() {\n  // Lấy thời gian hiện tại (dạng số), chuyển thành chuỗi base 36 và lấy 5 ký tự cuối\n  var phan1 = Date.now().toString(36).slice(-5);\n  // Tạo một số ngẫu nhiên từ 0 đến gần 1, chuyển thành chuỗi base 36 và lấy 3 ký tự cuối\n  var phan2 = Math.random().toString(36).slice(-3);\n  // Kết hợp hai phần để tạo ID\n  return phan1 + phan2;\n}\n\n// Hàm định dạng ngày tháng để lưu vào cơ sở dữ liệu (YYYY-MM-DD)\nexport function convertNgayThangNam(ngay) {\n  // Lấy năm\n  var nam = ngay.getFullYear();\n  // Lấy tháng (lưu ý: getMonth() trả về giá trị từ 0 đến 11, nên cần cộng 1)\n  var thangSo = ngay.getMonth() + 1;\n  // Chuyển tháng thành chuỗi và thêm '0' vào đầu nếu cần\n  var thang = thangSo < 10 ? '0' + thangSo : '' + thangSo;\n  // Lấy ngày\n  var ngaySo = ngay.getDate();\n  // Chuyển ngày thành chuỗi và thêm '0' vào đầu nếu cần\n  var ngayTrongThang = ngaySo < 10 ? '0' + ngaySo : '' + ngaySo;\n  // Trả về chuỗi ngày tháng theo định dạng<ctrl3348>-MM-DD\n  return nam + '-' + thang + '-' + ngayTrongThang;\n}","map":{"version":3,"names":["funcGetTongTien","gioHang","arrGioHang","Object","values","tongtien","i","length","sanPham","GiaBanTruyen","SoLuongTruyen","funcTongTienSauGG","tongTien","phanTramGiam","tienGiam","taoID","phan1","Date","now","toString","slice","phan2","Math","random","convertNgayThangNam","ngay","nam","getFullYear","thangSo","getMonth","thang","ngaySo","getDate","ngayTrongThang"],"sources":["D:/nxb_KimDong/fontend/user/src/component/payment/utils.js"],"sourcesContent":["// utils.js\r\n\r\n// Hàm tính tổng tiền tất cả sản phẩm trong giỏ hàng\r\nexport function funcGetTongTien(gioHang) {\r\n    // Lấy ra danh sách các sản phẩm trong giỏ hàng\r\n    var arrGioHang = Object.values(gioHang);\r\n    var tongtien = 0;\r\n    // Duyệt qua từng sản phẩm trong giỏ hàng\r\n    for (var i = 0; i < arrGioHang.length; i++) {\r\n        var sanPham = arrGioHang[i];\r\n        // Tính tiền của sản phẩm hiện tại (giá nhân số lượng) và cộng vào tổng tiền\r\n        tongtien = tongtien + sanPham.GiaBanTruyen * sanPham.SoLuongTruyen;\r\n    }\r\n    // Trả về tổng tiền\r\n    return tongtien;\r\n}\r\n\r\n// Hàm tính tổng tiền sau khi đã áp dụng giảm giá\r\nexport function funcTongTienSauGG(tongTien, phanTramGiam) {\r\n    // Tính số tiền được giảm\r\n    var tienGiam = (tongTien * phanTramGiam) / 100;\r\n    // Trả về tổng tiền sau khi đã trừ đi số tiền giảm\r\n    return tongTien - tienGiam;\r\n}\r\n\r\n// Hàm tạo một ID ngẫu nhiên\r\nexport function taoID() {\r\n    // Lấy thời gian hiện tại (dạng số), chuyển thành chuỗi base 36 và lấy 5 ký tự cuối\r\n    var phan1 = Date.now().toString(36).slice(-5);\r\n    // Tạo một số ngẫu nhiên từ 0 đến gần 1, chuyển thành chuỗi base 36 và lấy 3 ký tự cuối\r\n    var phan2 = Math.random().toString(36).slice(-3);\r\n    // Kết hợp hai phần để tạo ID\r\n    return phan1 + phan2;\r\n}\r\n\r\n// Hàm định dạng ngày tháng để lưu vào cơ sở dữ liệu (YYYY-MM-DD)\r\nexport function convertNgayThangNam(ngay) {\r\n    // Lấy năm\r\n    var nam = ngay.getFullYear();\r\n    // Lấy tháng (lưu ý: getMonth() trả về giá trị từ 0 đến 11, nên cần cộng 1)\r\n    var thangSo = ngay.getMonth() + 1;\r\n    // Chuyển tháng thành chuỗi và thêm '0' vào đầu nếu cần\r\n    var thang = thangSo < 10 ? '0' + thangSo : '' + thangSo;\r\n    // Lấy ngày\r\n    var ngaySo = ngay.getDate();\r\n    // Chuyển ngày thành chuỗi và thêm '0' vào đầu nếu cần\r\n    var ngayTrongThang = ngaySo < 10 ? '0' + ngaySo : '' + ngaySo;\r\n    // Trả về chuỗi ngày tháng theo định dạng<ctrl3348>-MM-DD\r\n    return nam + '-' + thang + '-' + ngayTrongThang;\r\n}"],"mappings":"AAAA;;AAEA;AACA,OAAO,SAASA,eAAeA,CAACC,OAAO,EAAE;EACrC;EACA,IAAIC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACH,OAAO,CAAC;EACvC,IAAII,QAAQ,GAAG,CAAC;EAChB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACxC,IAAIE,OAAO,GAAGN,UAAU,CAACI,CAAC,CAAC;IAC3B;IACAD,QAAQ,GAAGA,QAAQ,GAAGG,OAAO,CAACC,YAAY,GAAGD,OAAO,CAACE,aAAa;EACtE;EACA;EACA,OAAOL,QAAQ;AACnB;;AAEA;AACA,OAAO,SAASM,iBAAiBA,CAACC,QAAQ,EAAEC,YAAY,EAAE;EACtD;EACA,IAAIC,QAAQ,GAAIF,QAAQ,GAAGC,YAAY,GAAI,GAAG;EAC9C;EACA,OAAOD,QAAQ,GAAGE,QAAQ;AAC9B;;AAEA;AACA,OAAO,SAASC,KAAKA,CAAA,EAAG;EACpB;EACA,IAAIC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7C;EACA,IAAIC,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACJ,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChD;EACA,OAAOJ,KAAK,GAAGK,KAAK;AACxB;;AAEA;AACA,OAAO,SAASG,mBAAmBA,CAACC,IAAI,EAAE;EACtC;EACA,IAAIC,GAAG,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAC5B;EACA,IAAIC,OAAO,GAAGH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC;EACjC;EACA,IAAIC,KAAK,GAAGF,OAAO,GAAG,EAAE,GAAG,GAAG,GAAGA,OAAO,GAAG,EAAE,GAAGA,OAAO;EACvD;EACA,IAAIG,MAAM,GAAGN,IAAI,CAACO,OAAO,CAAC,CAAC;EAC3B;EACA,IAAIC,cAAc,GAAGF,MAAM,GAAG,EAAE,GAAG,GAAG,GAAGA,MAAM,GAAG,EAAE,GAAGA,MAAM;EAC7D;EACA,OAAOL,GAAG,GAAG,GAAG,GAAGI,KAAK,GAAG,GAAG,GAAGG,cAAc;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}