{"ast":null,"code":"var _s = $RefreshSig$();\n// useGiamGia.js\nimport { useState } from 'react';\nimport axios from 'axios';\nexport const useGiamGia = () => {\n  _s();\n  // State lưu trữ giá trị người dùng nhập vào ô mã giảm giá\n  const [inputMGG, setInputMGG] = useState('');\n  // State lưu trữ thông tin mã giảm giá hợp lệ (nếu có)\n  const [maHopLe, setMaHopLe] = useState(null);\n  // State lưu trữ phần trăm giảm giá\n  const [phanTramGG, setPhanTramGG] = useState(0);\n  // State lưu trữ thông báo về mã giảm giá\n  const [thongBaoGG, setThongBaoGG] = useState('');\n\n  // Hàm xử lý khi giá trị trong ô mã giảm giá thay đổi\n  const onChangeMGG = event => {\n    setInputMGG(event.target.value);\n    setThongBaoGG(''); // Xóa thông báo cũ khi người dùng nhập lại\n    console.log(maHopLe);\n    setMaHopLe(null); // Đặt lại mã hợp lệ\n    setPhanTramGG(0); // Đặt lại phần trăm giảm\n  };\n\n  // Hàm xử lý khi người dùng nhấn nút \"Áp dụng\"\n  const funcApDungMGG = () => {\n    const maNguoiDungNhap = inputMGG.trim().toUpperCase(); // Lấy mã đã nhập, loại bỏ khoảng trắng và chuyển thành chữ in hoa\n\n    if (maNguoiDungNhap) {\n      // Gọi API để lấy danh sách mã giảm giá\n      axios.get('http://localhost:3001/giamgias/').then(response => {\n        const danhSachMaGiamGia = response.data;\n        // Tìm mã giảm giá trong danh sách khớp với mã người dùng nhập\n        const maTimThay = danhSachMaGiamGia.find(maGG => maGG.id.toUpperCase() === maNguoiDungNhap); // 'id' là tên trường trong API\n\n        if (maTimThay) {\n          const ngayHienTai = new Date();\n          const ngayBatDau = new Date(maTimThay.ngaybatdau); // 'ngaybatdau' là tên trường trong API\n          const ngayKetThuc = new Date(maTimThay.ngayketthuc); // 'ngayketthuc' là tên trường trong API\n\n          // Kiểm tra xem mã giảm giá có còn hiệu lực không\n          if (ngayHienTai >= ngayBatDau && ngayHienTai <= ngayKetThuc) {\n            setMaHopLe(maTimThay);\n            setPhanTramGG(maTimThay.phantramgiamgia); // 'phantramgiamgia' là tên trường trong API\n            setThongBaoGG(`Áp dụng mã ${maNguoiDungNhap} thành công! Giảm ${maTimThay.phantramgiamgia}%`);\n          } else if (ngayHienTai < ngayBatDau) {\n            setMaHopLe(null);\n            setPhanTramGG(0);\n            setThongBaoGG(`Mã ${maNguoiDungNhap} chưa đến thời gian áp dụng!`);\n          } else {\n            setMaHopLe(null);\n            setPhanTramGG(0);\n            setThongBaoGG(`Mã ${maNguoiDungNhap} đã hết hạn!`);\n          }\n        } else {\n          setMaHopLe(null);\n          setPhanTramGG(0);\n          setThongBaoGG(`Mã ${maNguoiDungNhap} không tồn tại!`);\n        }\n      }).catch(error => {\n        console.error('Lỗi khi lấy dữ liệu giảm giá:', error);\n        setMaHopLe(null);\n        setPhanTramGG(0);\n        setThongBaoGG('Có lỗi xảy ra khi kiểm tra mã giảm giá.');\n      });\n    } else {\n      setMaHopLe(null);\n      setPhanTramGG(0);\n      setThongBaoGG('Vui lòng nhập mã giảm giá.');\n    }\n  };\n\n  // Trả về các state và hàm để component khác sử dụng\n  return {\n    inputMGG,\n    // Giá trị mã giảm giá người dùng nhập\n    maHopLe,\n    // Thông tin mã giảm giá hợp lệ (object) hoặc null\n    phanTramGG,\n    // Phần trăm giảm giá (số)\n    thongBaoGG,\n    // Thông báo về trạng thái mã giảm giá (chuỗi)\n    onChangeMGG,\n    // Hàm xử lý thay đổi ở ô nhập mã\n    funcApDungMGG // Hàm xử lý khi áp dụng mã giảm giá\n  };\n};\n_s(useGiamGia, \"0Gv9ypK5RaafYStIfYrIw0sqjdY=\");","map":{"version":3,"names":["useState","axios","useGiamGia","_s","inputMGG","setInputMGG","maHopLe","setMaHopLe","phanTramGG","setPhanTramGG","thongBaoGG","setThongBaoGG","onChangeMGG","event","target","value","console","log","funcApDungMGG","maNguoiDungNhap","trim","toUpperCase","get","then","response","danhSachMaGiamGia","data","maTimThay","find","maGG","id","ngayHienTai","Date","ngayBatDau","ngaybatdau","ngayKetThuc","ngayketthuc","phantramgiamgia","catch","error"],"sources":["D:/nxb_KimDong/fontend/user/src/component/payment/useGiamGia.js"],"sourcesContent":["// useGiamGia.js\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useGiamGia = () => {\r\n    // State lưu trữ giá trị người dùng nhập vào ô mã giảm giá\r\n    const [inputMGG, setInputMGG] = useState('');\r\n    // State lưu trữ thông tin mã giảm giá hợp lệ (nếu có)\r\n    const [maHopLe, setMaHopLe] = useState(null);\r\n    // State lưu trữ phần trăm giảm giá\r\n    const [phanTramGG, setPhanTramGG] = useState(0);\r\n    // State lưu trữ thông báo về mã giảm giá\r\n    const [thongBaoGG, setThongBaoGG] = useState('');\r\n\r\n    // Hàm xử lý khi giá trị trong ô mã giảm giá thay đổi\r\n    const onChangeMGG = (event) => {\r\n        setInputMGG(event.target.value);\r\n        setThongBaoGG(''); // Xóa thông báo cũ khi người dùng nhập lại\r\n        console.log(maHopLe);\r\n\r\n        setMaHopLe(null); // Đặt lại mã hợp lệ\r\n        setPhanTramGG(0); // Đặt lại phần trăm giảm\r\n    };\r\n\r\n    // Hàm xử lý khi người dùng nhấn nút \"Áp dụng\"\r\n    const funcApDungMGG = () => {\r\n        const maNguoiDungNhap = inputMGG.trim().toUpperCase(); // Lấy mã đã nhập, loại bỏ khoảng trắng và chuyển thành chữ in hoa\r\n\r\n        if (maNguoiDungNhap) {\r\n            // Gọi API để lấy danh sách mã giảm giá\r\n            axios.get('http://localhost:3001/giamgias/')\r\n                .then(response => {\r\n                    const danhSachMaGiamGia = response.data;\r\n                    // Tìm mã giảm giá trong danh sách khớp với mã người dùng nhập\r\n                    const maTimThay = danhSachMaGiamGia.find(maGG => maGG.id.toUpperCase() === maNguoiDungNhap); // 'id' là tên trường trong API\r\n\r\n                    if (maTimThay) {\r\n                        const ngayHienTai = new Date();\r\n                        const ngayBatDau = new Date(maTimThay.ngaybatdau); // 'ngaybatdau' là tên trường trong API\r\n                        const ngayKetThuc = new Date(maTimThay.ngayketthuc); // 'ngayketthuc' là tên trường trong API\r\n\r\n                        // Kiểm tra xem mã giảm giá có còn hiệu lực không\r\n                        if (ngayHienTai >= ngayBatDau && ngayHienTai <= ngayKetThuc) {\r\n                            setMaHopLe(maTimThay);\r\n                            setPhanTramGG(maTimThay.phantramgiamgia); // 'phantramgiamgia' là tên trường trong API\r\n                            setThongBaoGG(`Áp dụng mã ${maNguoiDungNhap} thành công! Giảm ${maTimThay.phantramgiamgia}%`);\r\n                        } else if (ngayHienTai < ngayBatDau) {\r\n                            setMaHopLe(null);\r\n                            setPhanTramGG(0);\r\n                            setThongBaoGG(`Mã ${maNguoiDungNhap} chưa đến thời gian áp dụng!`);\r\n                        } else {\r\n                            setMaHopLe(null);\r\n                            setPhanTramGG(0);\r\n                            setThongBaoGG(`Mã ${maNguoiDungNhap} đã hết hạn!`);\r\n                        }\r\n                    } else {\r\n                        setMaHopLe(null);\r\n                        setPhanTramGG(0);\r\n                        setThongBaoGG(`Mã ${maNguoiDungNhap} không tồn tại!`);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Lỗi khi lấy dữ liệu giảm giá:', error);\r\n                    setMaHopLe(null);\r\n                    setPhanTramGG(0);\r\n                    setThongBaoGG('Có lỗi xảy ra khi kiểm tra mã giảm giá.');\r\n                });\r\n        } else {\r\n            setMaHopLe(null);\r\n            setPhanTramGG(0);\r\n            setThongBaoGG('Vui lòng nhập mã giảm giá.');\r\n        }\r\n    };\r\n\r\n    // Trả về các state và hàm để component khác sử dụng\r\n    return {\r\n        inputMGG, // Giá trị mã giảm giá người dùng nhập\r\n        maHopLe, // Thông tin mã giảm giá hợp lệ (object) hoặc null\r\n        phanTramGG, // Phần trăm giảm giá (số)\r\n        thongBaoGG, // Thông báo về trạng thái mã giảm giá (chuỗi)\r\n        onChangeMGG, // Hàm xử lý thay đổi ở ô nhập mã\r\n        funcApDungMGG // Hàm xử lý khi áp dụng mã giảm giá\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}