{"ast":null,"code":"function updateCartCount(cartCountRefPC, cartCountRefMobile) {\n  // Lấy dữ liệu giỏ hàng từ Local Storage.\n  // Nếu không có dữ liệu, gán một object rỗng.\n  const duLieuGioHang = localStorage.getItem('GioHang');\n  let gioHang = {};\n  if (duLieuGioHang !== null) {\n    gioHang = JSON.parse(duLieuGioHang);\n  }\n\n  // Lấy tất cả các giá trị (là thông tin sản phẩm) từ object giỏ hàng vào một mảng.\n  const cacSanPhamTrongGioHang = Object.values(gioHang);\n\n  // Khởi tạo biến để tính tổng số lượng sản phẩm.\n  let tongSoLuong = 0;\n\n  // Sử dụng vòng lặp for để duyệt qua từng sản phẩm trong mảng cacSanPhamTrongGioHang.\n  for (let i = 0; i < cacSanPhamTrongGioHang.length; i++) {\n    const sanPham = cacSanPhamTrongGioHang[i];\n    let soLuongSanPham = sanPham.SoLuongTruyen;\n\n    // Kiểm tra nếu soLuongSanPham không tồn tại (undefined hoặc null), gán giá trị mặc định là 0.\n    if (soLuongSanPham === undefined || soLuongSanPham === null) {\n      soLuongSanPham = 0;\n    }\n\n    // Cộng số lượng của sản phẩm hiện tại vào tổng số lượng.\n    tongSoLuong = tongSoLuong + soLuongSanPham;\n  }\n\n  // Xác định giá trị hiển thị. Nếu tổng số lượng nhỏ hơn 10, hiển thị số thực tế.\n  // Nếu lớn hơn hoặc bằng 10, hiển thị \"9+\".\n  let giaTriHienThi;\n  if (tongSoLuong < 10) {\n    giaTriHienThi = tongSoLuong;\n  } else {\n    giaTriHienThi = \"9+\";\n  }\n\n  // Cập nhật nội dung văn bản (textContent) của phần tử HTML cho giỏ hàng trên PC/Tablet.\n  // Kiểm tra để đảm bảo cartCountRefPC và thuộc tính current của nó tồn tại.\n  if (cartCountRefPC !== null && cartCountRefPC.current !== null) {\n    cartCountRefPC.current.textContent = giaTriHienThi;\n  }\n\n  // Cập nhật nội dung văn bản (textContent) của phần tử HTML cho giỏ hàng trên Mobile.\n  // Kiểm tra để đảm bảo cartCountRefMobile và thuộc tính current của nó tồn tại.\n  if (cartCountRefMobile !== null && cartCountRefMobile.current !== null) {\n    cartCountRefMobile.current.textContent = giaTriHienThi;\n  }\n}\nexport default updateCartCount;","map":{"version":3,"names":["updateCartCount","cartCountRefPC","cartCountRefMobile","duLieuGioHang","localStorage","getItem","gioHang","JSON","parse","cacSanPhamTrongGioHang","Object","values","tongSoLuong","i","length","sanPham","soLuongSanPham","SoLuongTruyen","undefined","giaTriHienThi","current","textContent"],"sources":["D:/nxb_KimDong/fontend/user/src/component/updateCartCount.js"],"sourcesContent":["function updateCartCount(cartCountRefPC, cartCountRefMobile) {\r\n    // Lấy dữ liệu giỏ hàng từ Local Storage.\r\n    // Nếu không có dữ liệu, gán một object rỗng.\r\n    const duLieuGioHang = localStorage.getItem('GioHang');\r\n    let gioHang = {};\r\n    if (duLieuGioHang !== null) {\r\n        gioHang = JSON.parse(duLieuGioHang);\r\n    }\r\n\r\n    // Lấy tất cả các giá trị (là thông tin sản phẩm) từ object giỏ hàng vào một mảng.\r\n    const cacSanPhamTrongGioHang = Object.values(gioHang);\r\n\r\n    // Khởi tạo biến để tính tổng số lượng sản phẩm.\r\n    let tongSoLuong = 0;\r\n\r\n    // Sử dụng vòng lặp for để duyệt qua từng sản phẩm trong mảng cacSanPhamTrongGioHang.\r\n    for (let i = 0; i < cacSanPhamTrongGioHang.length; i++) {\r\n        const sanPham = cacSanPhamTrongGioHang[i];\r\n        let soLuongSanPham = sanPham.SoLuongTruyen;\r\n\r\n        // Kiểm tra nếu soLuongSanPham không tồn tại (undefined hoặc null), gán giá trị mặc định là 0.\r\n        if (soLuongSanPham === undefined || soLuongSanPham === null) {\r\n            soLuongSanPham = 0;\r\n        }\r\n\r\n        // Cộng số lượng của sản phẩm hiện tại vào tổng số lượng.\r\n        tongSoLuong = tongSoLuong + soLuongSanPham;\r\n    }\r\n\r\n    // Xác định giá trị hiển thị. Nếu tổng số lượng nhỏ hơn 10, hiển thị số thực tế.\r\n    // Nếu lớn hơn hoặc bằng 10, hiển thị \"9+\".\r\n    let giaTriHienThi;\r\n    if (tongSoLuong < 10) {\r\n        giaTriHienThi = tongSoLuong;\r\n    } else {\r\n        giaTriHienThi = \"9+\";\r\n    }\r\n\r\n    // Cập nhật nội dung văn bản (textContent) của phần tử HTML cho giỏ hàng trên PC/Tablet.\r\n    // Kiểm tra để đảm bảo cartCountRefPC và thuộc tính current của nó tồn tại.\r\n    if (cartCountRefPC !== null && cartCountRefPC.current !== null) {\r\n        cartCountRefPC.current.textContent = giaTriHienThi;\r\n    }\r\n\r\n    // Cập nhật nội dung văn bản (textContent) của phần tử HTML cho giỏ hàng trên Mobile.\r\n    // Kiểm tra để đảm bảo cartCountRefMobile và thuộc tính current của nó tồn tại.\r\n    if (cartCountRefMobile !== null && cartCountRefMobile.current !== null) {\r\n        cartCountRefMobile.current.textContent = giaTriHienThi;\r\n    }\r\n}\r\n\r\nexport default updateCartCount;"],"mappings":"AAAA,SAASA,eAAeA,CAACC,cAAc,EAAEC,kBAAkB,EAAE;EACzD;EACA;EACA,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EACrD,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIH,aAAa,KAAK,IAAI,EAAE;IACxBG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;EACvC;;EAEA;EACA,MAAMM,sBAAsB,GAAGC,MAAM,CAACC,MAAM,CAACL,OAAO,CAAC;;EAErD;EACA,IAAIM,WAAW,GAAG,CAAC;;EAEnB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,sBAAsB,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACpD,MAAME,OAAO,GAAGN,sBAAsB,CAACI,CAAC,CAAC;IACzC,IAAIG,cAAc,GAAGD,OAAO,CAACE,aAAa;;IAE1C;IACA,IAAID,cAAc,KAAKE,SAAS,IAAIF,cAAc,KAAK,IAAI,EAAE;MACzDA,cAAc,GAAG,CAAC;IACtB;;IAEA;IACAJ,WAAW,GAAGA,WAAW,GAAGI,cAAc;EAC9C;;EAEA;EACA;EACA,IAAIG,aAAa;EACjB,IAAIP,WAAW,GAAG,EAAE,EAAE;IAClBO,aAAa,GAAGP,WAAW;EAC/B,CAAC,MAAM;IACHO,aAAa,GAAG,IAAI;EACxB;;EAEA;EACA;EACA,IAAIlB,cAAc,KAAK,IAAI,IAAIA,cAAc,CAACmB,OAAO,KAAK,IAAI,EAAE;IAC5DnB,cAAc,CAACmB,OAAO,CAACC,WAAW,GAAGF,aAAa;EACtD;;EAEA;EACA;EACA,IAAIjB,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,CAACkB,OAAO,KAAK,IAAI,EAAE;IACpElB,kBAAkB,CAACkB,OAAO,CAACC,WAAW,GAAGF,aAAa;EAC1D;AACJ;AAEA,eAAenB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}