{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport useFetchData from '../useFetchData';\nconst API_URL_PROVINCES = 'https://provinces.open-api.vn/api/';\nexport const useDiaChi = () => {\n  _s();\n  // State cho danh sách tỉnh thành\n  const [dsTinh, setDsTinh] = useState([]);\n  // State cho danh sách quận huyện\n  const [dsHuyen, setDsHuyen] = useState([]);\n  // State cho danh sách phường xã\n  const [dsXa, setDsXa] = useState([]);\n\n  // State cho mã tỉnh đã chọn\n  const [maTinhChon, setMaTinhChon] = useState('');\n  // State cho mã huyện đã chọn\n  const [maHuyenChon, setMaHuyenChon] = useState('');\n  // State cho mã xã đã chọn\n  const [maXaChon, setMaXaChon] = useState('');\n\n  // Lấy dữ liệu tỉnh thành từ API\n  const {\n    data: duLieuTinh,\n    loading: dangTaiTinh,\n    error: loiTaiTinh\n  } = useFetchData(API_URL_PROVINCES);\n\n  // Khi có dữ liệu tỉnh, cập nhật danh sách\n  useEffect(() => {\n    if (duLieuTinh) {\n      setDsTinh(duLieuTinh);\n    }\n  }, [duLieuTinh]);\n\n  // Khi mã tỉnh thay đổi, lấy danh sách huyện\n  useEffect(() => {\n    if (maTinhChon) {\n      fetch(`https://provinces.open-api.vn/api/p/${maTinhChon}?depth=2`).then(res => res.json()).then(data => {\n        if (data !== null && data !== void 0 && data.districts) {\n          setDsHuyen(Object.values(data.districts));\n          setDsXa([]);\n          setMaHuyenChon('');\n          setMaXaChon('');\n        } else {\n          setDsHuyen([]);\n          setDsXa([]);\n          setMaHuyenChon('');\n          setMaXaChon('');\n        }\n      }).catch(err => console.error('Lỗi lấy huyện:', err));\n    } else {\n      setDsHuyen([]);\n      setDsXa([]);\n      setMaHuyenChon('');\n      setMaXaChon('');\n    }\n  }, [maTinhChon]);\n\n  // Khi mã huyện thay đổi, lấy danh sách xã\n  useEffect(() => {\n    if (maHuyenChon && maTinhChon) {\n      fetch(`https://provinces.open-api.vn/api/d/${maHuyenChon}?depth=2`).then(res => res.json()).then(data => {\n        if (data !== null && data !== void 0 && data.wards) {\n          setDsXa(Object.values(data.wards));\n          setMaXaChon('');\n        } else {\n          setDsXa([]);\n          setMaXaChon('');\n        }\n      }).catch(err => console.error('Lỗi lấy xã:', err));\n    } else {\n      setDsXa([]);\n      setMaXaChon('');\n    }\n  }, [maHuyenChon, maTinhChon]);\n\n  // Hàm xử lý khi chọn tỉnh\n  const chonTinh = event => {\n    setMaTinhChon(event.target.value);\n  };\n\n  // Hàm xử lý khi chọn huyện\n  const chonHuyen = event => {\n    setMaHuyenChon(event.target.value);\n  };\n\n  // Hàm xử lý khi chọn xã\n  const chonXa = event => {\n    setMaXaChon(event.target.value);\n  };\n  return {\n    dsTinh,\n    // Danh sách tỉnh thành\n    dsHuyen,\n    // Danh sách quận huyện\n    dsXa,\n    // Danh sách phường xã\n    maTinhChon,\n    // Mã tỉnh đã chọn\n    maHuyenChon,\n    // Mã quận huyện đã chọn\n    maXaChon,\n    // Mã phường xã đã chọn\n    chonTinh,\n    // Hàm xử lý khi chọn tỉnh\n    chonHuyen,\n    // Hàm xử lý khi chọn huyện\n    chonXa,\n    // Hàm xử lý khi chọn xã\n    dangTaiTinh,\n    // Trạng thái đang tải tỉnh thành\n    loiTaiTinh // Lỗi khi tải tỉnh thành\n  };\n};\n_s(useDiaChi, \"lw9wulXDP+WBhDesuVfzxjZ9z7Q=\", false, function () {\n  return [useFetchData];\n});","map":{"version":3,"names":["useState","useEffect","useFetchData","API_URL_PROVINCES","useDiaChi","_s","dsTinh","setDsTinh","dsHuyen","setDsHuyen","dsXa","setDsXa","maTinhChon","setMaTinhChon","maHuyenChon","setMaHuyenChon","maXaChon","setMaXaChon","data","duLieuTinh","loading","dangTaiTinh","error","loiTaiTinh","fetch","then","res","json","districts","Object","values","catch","err","console","wards","chonTinh","event","target","value","chonHuyen","chonXa"],"sources":["D:/nxb_KimDong/fontend/user/src/component/payment/useDiaChi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport useFetchData from '../useFetchData';\r\n\r\nconst API_URL_PROVINCES = 'https://provinces.open-api.vn/api/';\r\n\r\nexport const useDiaChi = () => {\r\n    // State cho danh sách tỉnh thành\r\n    const [dsTinh, setDsTinh] = useState([]);\r\n    // State cho danh sách quận huyện\r\n    const [dsHuyen, setDsHuyen] = useState([]);\r\n    // State cho danh sách phường xã\r\n    const [dsXa, setDsXa] = useState([]);\r\n\r\n    // State cho mã tỉnh đã chọn\r\n    const [maTinhChon, setMaTinhChon] = useState('');\r\n    // State cho mã huyện đã chọn\r\n    const [maHuyenChon, setMaHuyenChon] = useState('');\r\n    // State cho mã xã đã chọn\r\n    const [maXaChon, setMaXaChon] = useState('');\r\n\r\n    // Lấy dữ liệu tỉnh thành từ API\r\n    const { data: duLieuTinh, loading: dangTaiTinh, error: loiTaiTinh } = useFetchData(API_URL_PROVINCES);\r\n\r\n    // Khi có dữ liệu tỉnh, cập nhật danh sách\r\n    useEffect(() => {\r\n        if (duLieuTinh) {\r\n            setDsTinh(duLieuTinh);\r\n        }\r\n    }, [duLieuTinh]);\r\n\r\n    // Khi mã tỉnh thay đổi, lấy danh sách huyện\r\n    useEffect(() => {\r\n        if (maTinhChon) {\r\n            fetch(`https://provinces.open-api.vn/api/p/${maTinhChon}?depth=2`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data?.districts) {\r\n                        setDsHuyen(Object.values(data.districts));\r\n                        setDsXa([]);\r\n                        setMaHuyenChon('');\r\n                        setMaXaChon('');\r\n                    } else {\r\n                        setDsHuyen([]);\r\n                        setDsXa([]);\r\n                        setMaHuyenChon('');\r\n                        setMaXaChon('');\r\n                    }\r\n                })\r\n                .catch(err => console.error('Lỗi lấy huyện:', err));\r\n        } else {\r\n            setDsHuyen([]);\r\n            setDsXa([]);\r\n            setMaHuyenChon('');\r\n            setMaXaChon('');\r\n        }\r\n    }, [maTinhChon]);\r\n\r\n    // Khi mã huyện thay đổi, lấy danh sách xã\r\n    useEffect(() => {\r\n        if (maHuyenChon && maTinhChon) {\r\n            fetch(`https://provinces.open-api.vn/api/d/${maHuyenChon}?depth=2`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data?.wards) {\r\n                        setDsXa(Object.values(data.wards));\r\n                        setMaXaChon('');\r\n                    } else {\r\n                        setDsXa([]);\r\n                        setMaXaChon('');\r\n                    }\r\n                })\r\n                .catch(err => console.error('Lỗi lấy xã:', err));\r\n        } else {\r\n            setDsXa([]);\r\n            setMaXaChon('');\r\n        }\r\n    }, [maHuyenChon, maTinhChon]);\r\n\r\n    // Hàm xử lý khi chọn tỉnh\r\n    const chonTinh = (event) => {\r\n        setMaTinhChon(event.target.value);\r\n    };\r\n\r\n    // Hàm xử lý khi chọn huyện\r\n    const chonHuyen = (event) => {\r\n        setMaHuyenChon(event.target.value);\r\n    };\r\n\r\n    // Hàm xử lý khi chọn xã\r\n    const chonXa = (event) => {\r\n        setMaXaChon(event.target.value);\r\n    };\r\n\r\n    return {\r\n        dsTinh, // Danh sách tỉnh thành\r\n        dsHuyen, // Danh sách quận huyện\r\n        dsXa, // Danh sách phường xã\r\n        maTinhChon, // Mã tỉnh đã chọn\r\n        maHuyenChon, // Mã quận huyện đã chọn\r\n        maXaChon, // Mã phường xã đã chọn\r\n        chonTinh, // Hàm xử lý khi chọn tỉnh\r\n        chonHuyen, // Hàm xử lý khi chọn huyện\r\n        chonXa, // Hàm xử lý khi chọn xã\r\n        dangTaiTinh, // Trạng thái đang tải tỉnh thành\r\n        loiTaiTinh, // Lỗi khi tải tỉnh thành\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}