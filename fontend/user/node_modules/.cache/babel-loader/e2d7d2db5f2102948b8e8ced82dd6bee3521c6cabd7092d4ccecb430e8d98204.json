{"ast":null,"code":"function updateCartCount(cartCountRefPC, cartCountRefMobile) {\n  const GioHang = JSON.parse(localStorage.getItem('GioHang')) || {};\n  const totalQuantity = Object.values(GioHang).reduce((acc, item) => acc + (item.SoLuongTruyen || 0), 0);\n  const displayCount = totalQuantity < 10 ? totalQuantity : \"9+\";\n\n  // 4. Cập nhật số lượng hiển thị trên giao diện (cho phiên bản PC/Tablet):\n  //    - `if (cartCountRefPC && cartCountRefPC.current)`: Kiểm tra xem `cartCountRefPC` có tồn tại\n  //      và thuộc tính `current` của nó (thường là một tham chiếu đến một phần tử DOM) có tồn tại hay không.\n  //      `cartCountRefPC` được giả định là một React ref được tạo trong component Header\n  //      và được truyền vào hàm này.\n  //    - `cartCountRefPC.current.textContent = displayCount;`: Nếu tham chiếu hợp lệ, nó sẽ\n  //      thiết lập thuộc tính `textContent` (nội dung văn bản) của phần tử DOM mà `ref` này\n  //      trỏ tới thành giá trị của `displayCount`. Điều này sẽ hiển thị số lượng giỏ hàng\n  //      mới trên giao diện người dùng (thường là một con số nhỏ hoặc \"9+\" trên biểu tượng giỏ hàng).\n  if (cartCountRefPC && cartCountRefPC.current) {\n    cartCountRefPC.current.textContent = displayCount;\n  }\n\n  // 5. Cập nhật số lượng hiển thị trên giao diện (cho phiên bản Mobile):\n  //    - Tương tự như bước 4, nhưng dành cho tham chiếu `cartCountRefMobile`, được giả định\n  //      là ref trỏ đến phần tử hiển thị số lượng giỏ hàng trên giao diện mobile.\n  if (cartCountRefMobile && cartCountRefMobile.current) {\n    cartCountRefMobile.current.textContent = displayCount;\n  }\n}\nexport default updateCartCount;","map":{"version":3,"names":["updateCartCount","cartCountRefPC","cartCountRefMobile","GioHang","JSON","parse","localStorage","getItem","totalQuantity","Object","values","reduce","acc","item","SoLuongTruyen","displayCount","current","textContent"],"sources":["D:/nxb_KimDong/fontend/user/src/component/updateCartCount.js"],"sourcesContent":["function updateCartCount(cartCountRefPC, cartCountRefMobile) {\r\n    const GioHang = JSON.parse(localStorage.getItem('GioHang')) || {};\r\n    const totalQuantity = Object.values(GioHang).reduce((acc, item) => acc + (item.SoLuongTruyen || 0), 0);\r\n    const displayCount = totalQuantity < 10 ? totalQuantity : \"9+\";\r\n\r\n    // 4. Cập nhật số lượng hiển thị trên giao diện (cho phiên bản PC/Tablet):\r\n    //    - `if (cartCountRefPC && cartCountRefPC.current)`: Kiểm tra xem `cartCountRefPC` có tồn tại\r\n    //      và thuộc tính `current` của nó (thường là một tham chiếu đến một phần tử DOM) có tồn tại hay không.\r\n    //      `cartCountRefPC` được giả định là một React ref được tạo trong component Header\r\n    //      và được truyền vào hàm này.\r\n    //    - `cartCountRefPC.current.textContent = displayCount;`: Nếu tham chiếu hợp lệ, nó sẽ\r\n    //      thiết lập thuộc tính `textContent` (nội dung văn bản) của phần tử DOM mà `ref` này\r\n    //      trỏ tới thành giá trị của `displayCount`. Điều này sẽ hiển thị số lượng giỏ hàng\r\n    //      mới trên giao diện người dùng (thường là một con số nhỏ hoặc \"9+\" trên biểu tượng giỏ hàng).\r\n    if (cartCountRefPC && cartCountRefPC.current) {\r\n        cartCountRefPC.current.textContent = displayCount;\r\n    }\r\n\r\n    // 5. Cập nhật số lượng hiển thị trên giao diện (cho phiên bản Mobile):\r\n    //    - Tương tự như bước 4, nhưng dành cho tham chiếu `cartCountRefMobile`, được giả định\r\n    //      là ref trỏ đến phần tử hiển thị số lượng giỏ hàng trên giao diện mobile.\r\n    if (cartCountRefMobile && cartCountRefMobile.current) {\r\n        cartCountRefMobile.current.textContent = displayCount;\r\n    }\r\n}\r\n\r\nexport default updateCartCount;"],"mappings":"AAAA,SAASA,eAAeA,CAACC,cAAc,EAAEC,kBAAkB,EAAE;EACzD,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;EACjE,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACP,OAAO,CAAC,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,IAAIC,IAAI,CAACC,aAAa,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACtG,MAAMC,YAAY,GAAGP,aAAa,GAAG,EAAE,GAAGA,aAAa,GAAG,IAAI;;EAE9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIP,cAAc,IAAIA,cAAc,CAACe,OAAO,EAAE;IAC1Cf,cAAc,CAACe,OAAO,CAACC,WAAW,GAAGF,YAAY;EACrD;;EAEA;EACA;EACA;EACA,IAAIb,kBAAkB,IAAIA,kBAAkB,CAACc,OAAO,EAAE;IAClDd,kBAAkB,CAACc,OAAO,CAACC,WAAW,GAAGF,YAAY;EACzD;AACJ;AAEA,eAAef,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}